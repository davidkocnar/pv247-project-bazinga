[{"C:\\Users\\david\\WebstormProjects\\pv247-project-bazinga\\src\\index.tsx":"1","C:\\Users\\david\\WebstormProjects\\pv247-project-bazinga\\src\\reportWebVitals.ts":"2","C:\\Users\\david\\WebstormProjects\\pv247-project-bazinga\\src\\App.tsx":"3","C:\\Users\\david\\WebstormProjects\\pv247-project-bazinga\\src\\firebase\\auth.tsx":"4","C:\\Users\\david\\WebstormProjects\\pv247-project-bazinga\\src\\pages\\Login.tsx":"5","C:\\Users\\david\\WebstormProjects\\pv247-project-bazinga\\src\\pages\\Home.tsx":"6","C:\\Users\\david\\WebstormProjects\\pv247-project-bazinga\\src\\components\\OfferCard.tsx":"7","C:\\Users\\david\\WebstormProjects\\pv247-project-bazinga\\src\\firebase\\config.tsx":"8","C:\\Users\\david\\WebstormProjects\\pv247-project-bazinga\\src\\pages\\Register.tsx":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":3268,"mtime":1608160097140,"results":"13","hashOfConfig":"11"},{"size":999,"mtime":1608155985262,"results":"14","hashOfConfig":"11"},{"size":3138,"mtime":1608159682651,"results":"15","hashOfConfig":"11"},{"size":1131,"mtime":1608152277116,"results":"16","hashOfConfig":"11"},{"size":1113,"mtime":1608152277110,"results":"17","hashOfConfig":"11"},{"size":373,"mtime":1608155985360,"results":"18","hashOfConfig":"11"},{"size":2493,"mtime":1608159817689,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1urro6d",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"C:\\Users\\david\\WebstormProjects\\pv247-project-bazinga\\src\\index.tsx",[],["41","42"],"C:\\Users\\david\\WebstormProjects\\pv247-project-bazinga\\src\\reportWebVitals.ts",[],"C:\\Users\\david\\WebstormProjects\\pv247-project-bazinga\\src\\App.tsx",[],"C:\\Users\\david\\WebstormProjects\\pv247-project-bazinga\\src\\firebase\\auth.tsx",[],"C:\\Users\\david\\WebstormProjects\\pv247-project-bazinga\\src\\pages\\Login.tsx",["43"],"import React, {FC, useState} from 'react';\r\nimport {signIn, signUp, useLoggedInUser} from \"../firebase/auth\";\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {Box, Button, Card, CardActions, CardContent, Grid, TextField, Typography} from \"@material-ui/core\";\r\n\r\nconst Login: FC = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [error, setError] = useState<string>();\r\n\r\n  const isLoggedIn = useLoggedInUser();\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to=\"/\"/>;\r\n  }\r\n\r\n  return (\r\n    <Grid container direction={\"column\"} spacing={4} alignItems={\"center\"} justify={\"center\"}>\r\n      <Grid item md={5} sm={10}>\r\n        <Box mt=\"3rem\">\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h5\" component=\"h1\">\r\n                Přihlášení\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\"></Typography>\r\n              <TextField\r\n                label=\"E-mail\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                fullWidth\r\n                autoComplete=\"email\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}\r\n              />\r\n              <TextField\r\n                label=\"Heslo\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                value={password}\r\n                onChange={e => setPassword(e.target.value)}\r\n              />\r\n              {error && (\r\n                <Typography variant=\"subtitle2\" align=\"left\" color=\"error\" paragraph>\r\n                  <b>{error}</b>\r\n                </Typography>\r\n              )}\r\n              <Typography variant=\"subtitle2\" align=\"left\" paragraph>\r\n                <Link to=\"/\">\r\n                  <b>Zapomenuté heslo</b>\r\n                </Link>\r\n              </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n              <Button\r\n                variant=\"text\"\r\n                size=\"large\"\r\n                color=\"primary\"\r\n                // Handling promise with chained handlers\r\n                onClick={() =>\r\n                  signIn(email, password).catch(err => setError(err.message))\r\n                }\r\n              >\r\n                Přihlásit\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item md={5} sm={10}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography variant=\"h6\">Nemáte ještě účet?</Typography>\r\n            <Typography variant=\"body1\">Přidejte se k ostatním a sdílejte věci s příběhem.</Typography>\r\n            <Link to=\"/register\">\r\n              <Button\r\n                variant=\"text\"\r\n                size=\"large\"\r\n                color=\"primary\">\r\n                Vytvořit účet\r\n              </Button>\r\n            </Link>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\david\\WebstormProjects\\pv247-project-bazinga\\src\\pages\\Home.tsx",[],"C:\\Users\\david\\WebstormProjects\\pv247-project-bazinga\\src\\components\\OfferCard.tsx",[],"C:\\Users\\david\\WebstormProjects\\pv247-project-bazinga\\src\\firebase\\config.tsx",[],"C:\\Users\\david\\WebstormProjects\\pv247-project-bazinga\\src\\pages\\Register.tsx",["44","45"],"import React, {FC, useState} from 'react';\r\nimport {signIn, signUp, useLoggedInUser} from \"../firebase/auth\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Box, Button, Card, CardActions, CardContent, Link, TextField, Typography} from \"@material-ui/core\";\r\n\r\nconst Register: FC = () => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [error, setError] = useState<string>();\r\n\r\n  const isLoggedIn = useLoggedInUser();\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to=\"/\"/>;\r\n  }\r\n\r\n  return (\r\n    <Box mt=\"3rem\">\r\n      <Card>\r\n        <CardContent>\r\n          <Typography variant=\"h5\" component=\"h1\">\r\n            Registrace\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\">Vytvořte si nový účet a užívejte si Bazingu s námi.</Typography>\r\n          <TextField\r\n            label=\"Jméno\"\r\n            type=\"name\"\r\n            name=\"name\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            value={name}\r\n            onChange={e => setName(e.target.value)}\r\n          />\r\n          <TextField\r\n            label=\"E-mail\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            fullWidth\r\n            autoComplete=\"email\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n          />\r\n          <TextField\r\n            label=\"Heslo\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n          {error && (\r\n            <Typography variant=\"subtitle2\" align=\"left\" color=\"error\" paragraph>\r\n              <b>{error}</b>\r\n            </Typography>\r\n          )}\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            variant=\"text\"\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            // Handling promise with async/await\r\n            onClick={async () => {\r\n              try {\r\n                await signUp(email, password);\r\n              } catch (err) {\r\n                setError(err.message);\r\n              }\r\n            }}\r\n          >\r\n            Vytvořit účet\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":2,"column":17,"nodeType":"52","messageId":"53","endLine":2,"endColumn":23},{"ruleId":"50","severity":1,"message":"54","line":2,"column":9,"nodeType":"52","messageId":"53","endLine":2,"endColumn":15},{"ruleId":"50","severity":1,"message":"55","line":4,"column":54,"nodeType":"52","messageId":"53","endLine":4,"endColumn":58},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"@typescript-eslint/no-unused-vars","'signUp' is defined but never used.","Identifier","unusedVar","'signIn' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]